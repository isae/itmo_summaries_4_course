Георгий Корнеев. Базы данных. Лекция 1.

Про курс в целом:

Теория:
• проектирование (моделирование) базы
• реляционная алгебра и исчисление
• реализация
-- реляционные бд -- 
+ NoSQL - немного в конце

Практика:
• SQL (DDL, DQL, DML etc.)

Экзамен:
Теория: ничем пользоваться нельзя
* теор. вопрос - 
* теор. задача - в духе нормализовать какое-нибудь отношение

Практика:
* курсовик - написать какую-то БД
** не должна быть связана с примерами из курса
** у каждого своя тема
** просто запилить таблички, не engine
* практическое задание - на экзамене допилить к своей БД некоторую фичу

Итого - 4 оценки, усреднение и округление в зависимости от кармы.
Литература:
Дейт. К - Введение в системы баз данных - разжевано
Уидом Д. Ульман Д. - Основы реляционных баз данных
Гарсиа Молина, Ульман, Уидом - Система баз данных, полный курс. - боль
___________________________
Лекция:

* Схема базы данных
	что хранится
	как хранится
	права доступа
* Данные
* Типы данных
	простые
		целое
		дата
		строка
	структурированные
		адрес
		телефон
	сущности
		студент
		группа
	связи сущностей
value types
entity types

Требования к данным:
Корректность - Consistency - Согласованноесть - Целостность
- у данных нужно поддерживать определенный инвариант
Модель данных - должна контролировать целостность
-- Plain text -- - до сих пор есть, табличные процессоры
-- Файловая модель --: файл - одна запись, каталоги - подчиненные записи - DOM
-- Иерархическая модель данных -- (IBM, 1996г.) - дерево записей (IBM IMS, Windows registry)
-- Сетевая модель данных: иерархическая + ссылки (CODASYL, 1969)
	ориентированный граф записей
	отношения владелец - запись
	Integrated Data Store
-- Реляционная модель -- Е. Кодд, 1969
СУБД: Oracle Database, SQLite.
-- Объектная модель --
Сущнось - объект. Связь - поле. Ограничение целостности - определение объекта.
Удобно - поверх реляционной. Oracle Database Objects, ObjectDB.
-- NoSQL --
• документ - ориентированные 
• key-value storage
• табличные и столбчатые
• графовые
Latency / Throughput

Известные БД:

Oracle:
- высокая пропускная способность
- невысокая скорость обновления
- очень большая
- широко распространена в бизнес-среде

Очень хорошо оптимизирована на пропускную способность. Ынтырпрайз.

DB2 (IBM)
- ориентирована на большие машины (мейнфреймы)
- мало распространена в России
- неполная совместимость с SQL
- большое внимание уделяется обработке ошибок

MS SQL Server (Microsoft)
- работает под Windows
- масштабируемость

Opensource:

MySQL (MySQL,Sun,Oracle)
-- GPL
-- различные форматы хранения БД (больше гарантий - меньше производительность)
-- Неполная поддержка SQL

PostgreSQL (Berkeley)
- BSD licence

Firebird (Borland)
-- оригинальная лицензия
-- поддерживается встраиваемость

SQLite, Apache Derby, HyperSQLDB, Access (MS) - встраиваемые

Можно использовать любую из корпоративных/опенсорс, кроме Firebird и встраиваемых. 
__________
Про SQL - Structured Query Language
Стандартизован ISO
-- поддерживается почти всеми
-- не поддерживается никем
Версии: 
1: SQL-86 - простые запросы, немного типов соединений, доступ через курсоры
2: SQL-92 - новые типы соединений, динамические запросы, уровни изоляции транзакций, Call Level Interface
3: SQL-99 - новая структура стандарта, необязательные требования, boolean!, Object Language Binding - все забили
4: SQL-2003 - куча фич
2006, 2008, 2011 ... очень плохо поддерживается

Примеры запросов: 
create database ctd;
use ctd;
create table students (id int, name varchar(20), group_id int);
create table groups (group_id int, code char(5));
insert into groups (group_id, code) values (1, 'M3439'), (2, 'M3438'), (3, 'M3437');
....












































































