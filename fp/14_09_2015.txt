FP. Лекция 2. Коваников.
- Тип с большой буквы - конкретный тип
- с маленькой - полиморфизм
* Синтаксис
  --- Лямбды ---
    - анонимные функции
    - фреймворки
    синтаксис лямбд - (\...)
  --- let ---
    - объявление переменной
    - переменные нужно писать друг под другом
    - надо смотреть на отступы
  --- where ---
    - функции внутри функций
    - не засоряем глобальный scope
    - можно использовать внутри let
  --- if ---
    - expression в хаскеле, имеет возвращаемое значение
  --- guards ---
    - каскадные if-ы на стероидах
  --- case ---
    - есть pattern-matching
  --- lists ---
    - конкатенация правоассоциативная
    - head (первый элемент)
    - tail (все кроме первого)
    - init (все кроме последнего)
    - drop n  - выкидывает первые n элементов //NB :t - посмотреть тип функции
    - hoogle
    - [2,1,3]!!2 - взятие элемента по индексу
  --- High order functions ---
      - apply
      - map
      - filter 
      - span - разделяет два списка, на один, в котором предикат истинен и в котором ложен
    --- fold ---
      - свертки
      - обобщение рекурсии
      - foldr f z - снизу вверх
      - foldl f z - сверху вниз
      - foldr (+) 0 [1,2,3,4,5]
      - правая быстрее левой 
      - Foldable
    --- zip ---
      - по паре списков возвращает список пар
      - uncurry / curry (G)
  --- Каррирование (Currying) ---
    - частичное применение функции
    - бета - редукция
    - скобки в типах правоассоциативные
  --- Pattern matching --- 
    - killer-фича хаскеля
    - одна из самых частых ошибок - non-exhausting pattern matching
    - есть дополнение которое предупреждает, если покрыли не полностью
  --- Композиция функций ---
  --- Объявление операторов ---
    - погуглить
    - $ - оператор применения
    - погуглить про редукции
    - утилита pf (point-free)
    - погуглить hlint
  --- Ranges ---
    - бесконечные списки
    - enums
  --- List comprehension ---
    - генераторы списков  
    - синтаксический сахар для монад
- комментарии: --..., {-...-}
